[{"/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/Desktop.js":"1","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/App.js":"2","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/index.js":"3","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/SvgSection.js":"4","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/reportWebVitals.js":"5","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/Mobile.js":"6","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/mock_data.js":"7"},{"size":31134,"mtime":1619490924698,"results":"8","hashOfConfig":"9"},{"size":3034,"mtime":1619490963480,"results":"10","hashOfConfig":"9"},{"size":700,"mtime":1615576092039,"results":"11","hashOfConfig":"9"},{"size":3055,"mtime":1609936305537,"results":"12","hashOfConfig":"9"},{"size":362,"mtime":1608610226311,"results":"13","hashOfConfig":"9"},{"size":9133,"mtime":1619490906733,"results":"14","hashOfConfig":"9"},{"size":903,"mtime":1619390673680,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"yl3hm3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/Desktop.js",["36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57"],"import React from \"react\";\nimport \"react-slidedown/lib/slidedown.css\";\nimport parse from 'html-react-parser';\nimport {SlideDown} from 'react-slidedown';\nimport ScrollSnap from 'scroll-snap'\nimport ReactHtmlParser from 'react-html-parser';\nimport \"./App.css\";\nimport 'react-slidedown/lib/slidedown.css';\n\nclass Desktop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleOnHoverCallCTA: false,\n      toggleEN: false,\n      isClosedInfoPanel: true,\n      selectedlan: \"fr\",\n      loaded: true,\n      counter: 0,\n      selectedDivId: 0,\n      scrollDirection: null,\n      updatedHeightOfPage: null,\n      viewportHeight: null,\n      viewportWidth: null,\n      mainCmsDataSubArrays: null,\n      dataToDivs: null,\n      isTriggeredInfoContent: false,\n      mainCmsData: null,\n      infoCmsData: null,\n      scroll: 0,\n    };\n  }\n\n  componentDidMount() {\n\n    document.addEventListener(\"scroll\", this.scrollHandler);\n    window.addEventListener(\"resize\", this.resizeHandler);\n    let {cmsData} = this.props;\n    let mainCmsData = cmsData.slice(0, 9);\n    let infoCmsData = cmsData.slice(9, 14);\n\n    let viewportHeight = window.innerHeight;\n    let viewportWidth = this.props.viewportWidth;\n\n    let updatedHeightOfPage = viewportHeight * 8.5;\n    document.body.style.height = `${updatedHeightOfPage}px`;\n\n    this.setState(\n      {\n        updatedHeightOfPage,\n        viewportHeight,\n        viewportWidth,\n        mainCmsData,\n        infoCmsData\n      },\n      () => {\n        // Slice the data in chops for panels;\n        let {mainCmsData} = this.state;\n        let mainCmsDataSubArrays = [\n          mainCmsData.slice(0, 3),\n          mainCmsData.slice(3, 6),\n          mainCmsData.slice(6, 9)\n        ];\n        this.setState(\n          {\n            mainCmsDataSubArrays\n          },\n          () => {\n            // Once this chop is done, format these to divs;\n            this.renderDataToDivs(this.state.selectedlan);\n          }\n        );\n      }\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    // Get these images and their divs here; \n    // or a hard block when the user reaches\n    // the bottom of the viewportHeight;\n\n    let firstSvg = document.querySelector(`#container_div_0 svg`);\n    let firstContainer = document.getElementById(\"container_div_0\");\n\n    let secondSvg = document.querySelector(`#container_div_1 svg`);\n    let secondContainer = document.getElementById(\"container_div_1\");\n\n    let thirdSvg = document.querySelector(`#container_div_2 svg`);\n    let thirdContainer = document.getElementById(\"container_div_2\");\n\n\n    const {\n      selectedDivId,\n      viewportHeight, \n      viewportWidth,\n      loaded} = this.state;\n\n\n    if(!window.pageYOffset\n       && firstContainer\n       && viewportHeight){\n\n        firstSvg.style.height = \"101vh\"\n        secondSvg.style.height = \"101vh\"\n        thirdSvg.style.height = \"103vh\"\n\n        firstContainer.style.height = `${this.state.viewportHeight}px`;\n        secondContainer.style.height = `${this.state.viewportHeight}px`;\n        thirdContainer.style.height = `${this.state.viewportHeight}px`;\n\n    \n    }\n\n    let counter = this.state.counter;\n    let divTextH1 = [...document.getElementsByClassName(\"div_text_h1\")];\n    let divTextP = [...document.getElementsByClassName(\"div_text_p\")];\n\n    let {mainCmsDataSubArrays, selectedlan} = this.state;\n\n    let selectedLanHeadlines = `headlines_${selectedlan}`;\n    let selectedLanPara = `paragraph_${selectedlan}`;\n\n    if (selectedlan !== prevState.selectedlan) {\n      window.scrollTo(0, 0);\n    }\n\n    if (counter !== prevState.counter) {\n      if (counter >= 0 && counter < 6) {\n\n        this.setState({\n          isDisplayFooter: false\n        });\n\n        let mainCmsDataSubArraysFirstRow = mainCmsDataSubArrays[0];\n\n        divTextH1.map((ele, index) => {\n          ele.innerHTML =\n            mainCmsDataSubArraysFirstRow[index][selectedLanHeadlines];\n        });\n        divTextP.map((ele, index) => {\n          ele.innerHTML = mainCmsDataSubArraysFirstRow[index][selectedLanPara];\n        });\n\n      }\n\n      if (counter >= 6 && counter < 12) {\n        this.setState({\n          isDisplayFooter: false\n        });\n\n        let mainCmsDataSubArraysSecondRow = mainCmsDataSubArrays[1];\n\n        divTextH1.map((ele, index) => {\n          ele.innerHTML =\n            mainCmsDataSubArraysSecondRow[index][selectedLanHeadlines];\n        });\n        divTextP.map((ele, index) => {\n          ele.innerHTML = mainCmsDataSubArraysSecondRow[index][selectedLanPara];\n        });\n      }\n\n\n      if (counter === 12) {\n\n        let valueForFooter;\n\n        if(viewportHeight > 2000){\n          valueForFooter = this.defineValueFromPorcentage(14, this.state.updatedHeightOfPage);\n        }else{\n          valueForFooter = this.defineValueFromPorcentage(12, this.state.updatedHeightOfPage);\n        }\n\n        window.onscroll = ev => {\n          if (\n            window.innerHeight + window.scrollY >=\n            document.body.offsetHeight - valueForFooter\n          ) {\n            this.setState({\n              isDisplayFooter: true\n            });\n          } else {\n            this.setState({\n              isDisplayFooter: false\n            });\n          }\n        };\n\n        let mainCmsDataSubArraysThirdRow = mainCmsDataSubArrays[2];\n\n        divTextH1.map((ele, index) => {\n          ele.innerHTML =\n            mainCmsDataSubArraysThirdRow[index][selectedLanHeadlines];\n        });\n        divTextP.map((ele, index) => {\n          ele.innerHTML = mainCmsDataSubArraysThirdRow[index][selectedLanPara];\n        });\n      }\n    }\n\n    if(selectedDivId !== prevState.selectedDivId){\n\n  \n      let firstImg = document.querySelector(`#container_div_0 svg`);\n      let firstContainer = document.getElementById(\"container_div_0\");\n  \n      let secondImg = document.querySelector(`#container_div_1 svg`);\n      let secondContainer = document.getElementById(\"container_div_1\");\n  \n      let thirdImg = document.querySelector(`#container_div_2 svg`);\n      let thirdContainer = document.getElementById(\"container_div_2\");\n\n\n      if(selectedDivId === 1){\n\n        firstImg.style.height = \"101vh\"\n        firstContainer.style.height = `${this.state.viewportHeight}px`;\n\n        thirdImg.style.height = \"103vh\"\n        thirdContainer.style.height = `${this.state.viewportHeight}px`;\n        \n      }\n\n      if(selectedDivId === 2){\n\n        firstImg.style.height = \"101vh\"\n        firstContainer.style.height = `${this.state.viewportHeight}px`;\n\n        secondImg.style.height = \"101vh\"\n        secondContainer.style.height = `${this.state.viewportHeight}px`;\n\n      }\n\n      if(selectedDivId === 0){\n\n        secondImg.style.height = \"101vh\"\n        secondContainer.style.height = `${this.state.viewportHeight}px`;\n\n        thirdImg.style.height = \"103vh\"\n        thirdContainer.style.height = `${this.state.viewportHeight}px`;\n\n      }\n\n\n    }\n  }\n\n  toggleEN = () => {\n    this.setState(\n      {\n        toggleEN: !this.state.toggleEN,\n      },\n      () => {\n        if (this.state.toggleEN) {\n          this.setState(\n            {\n              selectedlan: \"en\"\n            },\n            () => {\n              window.scrollTo(0,0);\n            }\n          );\n        } else {\n          this.setState(\n            {\n              selectedlan: \"fr\"\n            },\n            () => {\n              window.scrollTo(0,0);\n            }\n          );\n        }\n      }\n    );\n  };\n\n\n\n  renderDataToDivs = selectedlan => {\n\n\n    let mainCmsDataSubArraysFirstRow = this.state.mainCmsDataSubArrays[0];\n\n    let imgArray = [\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"429\" height=\"91.66\" viewBox=\"0 0 429 91.66\" preserveAspectRatio=\"none\">\n          <g id=\"Group_108\" data-name=\"Group 108\" transform=\"translate(-4172 11454.878)\">\n            <path id=\"R1\" d=\"M338.868,66.533c-1.153-11.153-5.513-16.024-13.973-18.46v-.385c11.794-3.2,16.794-11.409,16.794-22.178C341.689,10.256,329.894,0,312.2,0H270.155V91.66h18.589V54.867h15c11.538,0,17.178,5.64,17.948,15.64.769,9.872,1.026,20.127,3.333,21.152h17.819v-.9C339.637,89.353,340.15,79.481,338.868,66.533ZM308.486,40.51H288.744V15H309c9.871,0,14.614,5.512,14.614,12.947C323.613,35.254,318.613,40.51,308.486,40.51Z\" transform=\"translate(4116.31 -11454.878)\"/>\n            <rect id=\"I1\" width=\"18.588\" height=\"91.66\" transform=\"translate(4573.756 -11454.878)\"/>\n            <path id=\"Y\" d=\"M412.933,27.178c-2.692,5.512-6.153,13.076-6.153,13.076h-.256s-3.2-7.564-6.025-13.076L386.653,0H366.4l30.51,56.278V91.66H415.5V56.278L446.008,0H426.522Z\" transform=\"translate(4096.471 -11454.878)\"/>\n            <g id=\"GUILLEMETS1\" transform=\"translate(4172 -11434.238)\">\n              <path id=\"Path_71\" data-name=\"Path 71\" d=\"M0,66.753,18.46,83.8V67.65L8.2,58.549v-.256l10.256-9.1V32.781L0,49.832Z\" transform=\"translate(0 -32.781)\"/>\n              <path id=\"Path_72\" data-name=\"Path 72\" d=\"M30.682,66.753,49.142,83.8V67.65l-10.256-9.1v-.256l10.256-9.1V32.781L30.682,49.832Z\" transform=\"translate(-6.325 -32.781)\"/>\n            </g>\n            <path id=\"V\" d=\"M100.521,53.073c-1.795,5.9-3.974,14.615-3.974,14.615h-.256s-2.179-8.59-3.974-14.615L76.164,0H56.678l30.9,91.66H104.5L135.391,0H116.546Z\" transform=\"translate(4160.316 -11454.878)\"/>\n            <path id=\"E1\" d=\"M186.2,51.406h42.818V36.151H186.2V15.64h48.843V0H167.616V91.66h67.815V76.148H186.2Z\" transform=\"translate(4137.447 -11454.878)\"/>\n            <rect id=\"Rectangle_58\" data-name=\"Rectangle 58\" width=\"4\" height=\"4\" transform=\"translate(4597 -11368)\" fill=\"#fff\"/>\n          </g>\n        </svg>,\n     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"418\" height=\"91.66\" viewBox=\"0 0 418 91.66\" preserveAspectRatio=\"none\">\n     <g id=\"Group_109\" data-name=\"Group 109\" transform=\"translate(-4601 11454.878)\">\n       <path id=\"T\" d=\"M657.385,15.64h27.562V91.66h18.588V15.64H731.1V0H657.385Z\" transform=\"translate(4036.485 -11454.878)\"/>\n       <path id=\"N1\" d=\"M605.509,48.074c0,6.41.513,15.9.513,15.9h-.256s-3.461-7.82-6.41-12.82L568.846,0H550V91.66h18.332v-47.3c0-6.41-.513-16.024-.513-16.024h.256s3.59,7.819,6.538,12.691l31.28,50.637h17.948V0H605.509Z\" transform=\"translate(4058.622 -11454.878)\"/>\n       <path id=\"R2\" d=\"M935.859,66.533c-1.154-11.153-5.512-16.024-13.973-18.46v-.385c11.793-3.2,16.793-11.409,16.793-22.178C938.68,10.256,926.886,0,909.2,0H867.147V91.66h18.588V54.867h15c11.537,0,17.178,5.64,17.948,15.64.768,9.872,1.025,20.127,3.333,21.152h17.82v-.9C936.629,89.353,937.141,79.481,935.859,66.533ZM905.478,40.51H885.735V15H905.99c9.871,0,14.614,5.512,14.614,12.947C920.6,35.254,915.6,40.51,905.478,40.51Z\" transform=\"translate(3993.245 -11454.878)\"/>\n       <path id=\"E3\" d=\"M993.441,51.406h42.818V36.151H993.441V15.64h48.843V0H974.853V91.66h67.816V76.148H993.441Z\" transform=\"translate(3971.042 -11454.878)\"/>\n       <path id=\"E2\" d=\"M783.2,51.406h42.818V36.151H783.2V15.64h48.842V0h-67.43V91.66h67.815V76.148H783.2Z\" transform=\"translate(4014.383 -11454.878)\"/>\n       <rect id=\"Rectangle_61\" data-name=\"Rectangle 61\" width=\"4\" height=\"4\" transform=\"translate(5015 -11368)\" fill=\"#fff\"/>\n       <rect id=\"Rectangle_59\" data-name=\"Rectangle 59\" width=\"4\" height=\"4\" transform=\"translate(4601 -11368)\" fill=\"#fff\"/>\n     </g>\n   </svg>,\n   <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"433\" height=\"93.711\" viewBox=\"0 0 433 93.711\" preserveAspectRatio=\"none\">\n     <g id=\"Group_111\" data-name=\"Group 111\" transform=\"translate(-5019 11454.878)\">\n       <g id=\"Group_110\" data-name=\"Group 110\" transform=\"translate(4172 -11455.045)\">\n         <path id=\"Path_94\" data-name=\"Path 94\" d=\"M1378.836,48.074c0,6.41.513,15.9.513,15.9h-.256s-3.461-7.82-6.41-12.82L1342.173,0h-18.845V91.66h18.332v-47.3c0-6.41-.513-16.024-.513-16.024h.256s3.589,7.819,6.537,12.691l31.28,50.637h17.947V0h-18.332Z\" transform=\"translate(-272.793 0.167)\"/>\n         <path id=\"Path_95\" data-name=\"Path 95\" d=\"M1478.315,57.3h22.05v.513c0,10.128-9.358,20.768-23.588,20.768-15.768,0-25.639-13.717-25.639-32.434,0-18.2,8.589-32.562,25.9-32.562,11.794,0,18.589,6.41,20.64,15.256h18.2C1513.582,14.878,1505.074,4.1,1490.54,0h-27.585a38.668,38.668,0,0,0-15.791,8.717c-9.614,8.845-15,22.178-15,37.433,0,13.846,4.358,25.639,11.922,34.1,7.563,8.333,18.332,13.332,32.177,13.332,10.9,0,19.486-3.718,25.768-14.229h.256l.641,12.306H1516.9V42.945h-38.587Z\" transform=\"translate(-295.229 0.167)\"/>\n         <g id=\"Group_15\" data-name=\"Group 15\" transform=\"translate(1237.183 20.807)\">\n           <path id=\"Path_76\" data-name=\"Path 76\" d=\"M1558.443,48.934l10.256,9.1v.256l-10.256,9.1V83.8l18.46-17.05V49.832l-18.46-17.051Z\" transform=\"translate(-1558.443 -32.781)\"/>\n           <path id=\"Path_78\" data-name=\"Path 78\" d=\"M1589.125,32.781V48.934l10.256,9.1v.256l-10.256,9.1V83.8l18.46-17.05V49.832Z\" transform=\"translate(-1564.768 -32.781)\"/>\n         </g>\n         <rect id=\"Rectangle_34\" data-name=\"Rectangle 34\" width=\"18.588\" height=\"91.66\" transform=\"translate(1015.667 0.167)\"/>\n         <path id=\"Path_96\" data-name=\"Path 96\" d=\"M1172.022,15.64h27.563V91.66h18.588V15.64h27.562V0h-73.713Z\" transform=\"translate(-241.604 0.167)\"/>\n         <path id=\"Path_93\" data-name=\"Path 93\" d=\"M1112.442,36.407c-13.588-2.948-20-5.128-20-12.563,0-6.538,6.537-10.769,16.537-10.769,9.487,0,16.665,4.615,17.691,13.846h17.819C1143.412,12.8,1135.356,3.569,1122.4,0h-27.069c-12.919,3.424-21.348,12.1-21.348,25.767,0,19.1,15,23.46,31.408,27.178,13.973,3.2,22.69,5,22.69,13.973,0,8.461-8.332,11.794-17.819,11.794-13.076,0-19.357-4.358-20.639-15.383h-18.2c.641,19.357,14.743,30.383,39.613,30.383,20.64,0,35.638-10.384,35.638-28.973C1146.669,45,1131.286,40.51,1112.442,36.407Z\" transform=\"translate(-220.864 0.167)\"/>\n       </g>\n       <rect id=\"Rectangle_62\" data-name=\"Rectangle 62\" width=\"1\" height=\"2\" transform=\"translate(5019 -11367)\" fill=\"#fff\"/>\n     </g>\n   </svg>,\n  ]\n\n    let dataToDivs = imgArray.map((ele, index) => {\n      let divID = `container_div_${index}`;\n      let selectedLanHeadlines = `headlines_${selectedlan}`;\n      let selectedLanPara = `paragraph_${selectedlan}`;\n      let imgID = `svg_${index}`;\n\n      let parsedH = mainCmsDataSubArraysFirstRow[index][selectedLanHeadlines];\n      let parsedP = mainCmsDataSubArraysFirstRow[index][selectedLanPara];\n\n      return (\n        <div className=\"main_vertical_container_inner\">\n          <div id={divID} className=\"svgs_containers\">\n           {imgArray[index]}\n          </div>\n          <div className=\"text_container\">\n            <h1 className=\"div_text_h1\">\n              {parse(parsedH)}\n            </h1>\n            <p className=\"div_text_p\">\n             {parse(parsedP)}\n            </p>\n          </div>\n        </div>\n      );\n    });\n    this.setState({\n      dataToDivs\n    });\n  };\n\n\n  scrollHandler = event => {\n    \n    let numberOfPixelScrolled = window.scrollY;\n    let viewportHeight = this.state.viewportHeight;\n\n\n    this.setState({\n      scroll: numberOfPixelScrolled\n    });\n\n    if (numberOfPixelScrolled > 0 && numberOfPixelScrolled < viewportHeight*0.5) {\n      this.setState(\n        {\n          counter: 0,\n          selectedDivId: 0,\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight*0.5 &&\n      numberOfPixelScrolled < viewportHeight *1\n    ) {\n      this.setState(\n        {\n          counter: 1,\n          selectedDivId: 0\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 1 &&\n      numberOfPixelScrolled < viewportHeight * 1.5\n    ) {\n      this.setState(\n        {\n          counter: 2,\n          selectedDivId: 1\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 1.5 &&\n      numberOfPixelScrolled < viewportHeight * 2\n    ) {\n      this.setState(\n        {\n          counter: 3,\n          selectedDivId: 1\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 2 &&\n      numberOfPixelScrolled < viewportHeight * 2.5\n    ) {\n\n      this.setState(\n        {\n          counter: 4,\n          selectedDivId: 2\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 2.5 &&\n      numberOfPixelScrolled < viewportHeight * 3\n    ) {\n\n      this.setState(\n        {\n          counter: 5,\n          selectedDivId: 2\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 3 &&\n      numberOfPixelScrolled < viewportHeight * 3.5\n    ) {\n\n      this.setState(\n        {\n          counter: 6,\n          selectedDivId: 0\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 3.5 &&\n      numberOfPixelScrolled < viewportHeight * 4\n    ) {\n\n      this.setState(\n        {\n          counter: 7,\n          selectedDivId: 0\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 4 &&\n      numberOfPixelScrolled < viewportHeight * 4.5\n    ) {\n      this.setState(\n        {\n          counter: 8,\n          selectedDivId: 1\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 4.5 &&\n      numberOfPixelScrolled < viewportHeight * 5\n    ) {\n      this.setState(\n        {\n          counter: 9,\n          selectedDivId: 1\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 5 &&\n      numberOfPixelScrolled < viewportHeight * 5.5\n    ) {\n\n      this.setState(\n        {\n          counter: 10,\n          selectedDivId: 2\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 5.5 &&\n      numberOfPixelScrolled < viewportHeight * 6\n    ) {\n      this.setState(\n        {\n          counter: 11,\n          selectedDivId: 2\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        }\n      );\n    }\n\n    if (\n      numberOfPixelScrolled > viewportHeight * 6 &&\n      numberOfPixelScrolled < viewportHeight * 6.5\n    ) {\n      this.setState(\n        {\n          counter: 12,\n          selectedDivId: 2\n        },\n        () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, 0, \"up\", true);\n          this.handleAnimation(counter, 1, \"up\", true);\n          this.handleAnimation(counter, 2, \"up\", true);\n        }\n      );\n    }\n  };\n\n  handleAnimation = (counter, selectedDivId, animDirection, all) => {\n\n    let divID = `container_div_${selectedDivId}`;\n    let imgContainer = document.querySelector(`#${divID}`);\n    let selectedSvg = document.querySelector(`#${divID} svg`);\n    let numberOfPixelScrolled = window.scrollY;\n    let halfViewportHeight = this.state.viewportHeight/2;\n\n    // to change;\n    let originalImageHeight = 101\n\n\n    let scrolledPorcentage = this.definePorcentage(\n      numberOfPixelScrolled - this.state.counter * halfViewportHeight,\n      halfViewportHeight\n    );\n\n    let remainingScrollPorcentage = 100 - scrolledPorcentage;\n\n    let svgHeightValueUp = this.defineValueFromPorcentage(\n      remainingScrollPorcentage,\n      originalImageHeight\n    );\n    \n    let svgHeightValueDown = this.defineValueFromPorcentage(\n      scrolledPorcentage,\n      originalImageHeight\n    );\n\n    if(animDirection === \"up\"){\n\n      selectedSvg.style.height = `${svgHeightValueUp}vh`\n      let newImgContainerHeight = selectedSvg.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n\n      console.log(svgHeightValueUp, \"up\");\n\n      if(svgHeightValueUp > 92){\n        selectedSvg.style.height = `101vh`\n        let newImgContainerHeight = selectedSvg.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n      }\n\n\n      if(svgHeightValueUp < 12){\n        selectedSvg.style.height = `12vh`\n        let newImgContainerHeight = selectedSvg.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n      }\n\n    }\n    if(animDirection === \"down\"){\n\n      selectedSvg.style.height = `${svgHeightValueDown}vh`\n      let newImgContainerHeight = selectedSvg.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n\n      console.log(svgHeightValueDown, \"down\");\n\n      if(svgHeightValueDown > 92){\n        selectedSvg.style.height = `101vh`\n        let newImgContainerHeight = selectedSvg.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n      }\n\n      if(svgHeightValueDown < 12){\n        selectedSvg.style.height = `12vh`\n        let newImgContainerHeight = selectedSvg.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n      }\n\n    }\n\n  };\n\n\n  definePorcentage = (percent, total) => {\n    let porcentage = (percent / total) * 100;\n    return porcentage;\n  };\n\n  defineValueFromPorcentage = (percentage, total) => {\n    let value = (percentage / 100) * total\n    return value;\n  };\n\n  renderDivsToDomDesktop = () => {\n    if (!this.state.dataToDivs) {\n      return \"loading\";\n    } else {\n      return this.state.dataToDivs;\n    }\n  };\n\n  renderInfoDesktop = () => {\n    if (!this.state.infoCmsData) {\n      return null;\n    }\n    return (\n      <div className=\"info_main_container\">\n        {this.renderInfoDesktopCTA()}\n        {this.renderDesktopBodyCTA()}\n      </div>\n    );\n  };\n\n  renderInfoDesktopCTA = () => {\n    return (\n      <div className=\"cta_desktop_container\">\n        <div\n          className=\"info_cta_container\"\n          onClick={this.triggerInfoContent}\n          style={this.infoCTAStyle()}\n        >\n          <img src=\"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1612842534/paprika%20-%20very%20interesting/Croix.svg\" />\n        </div>\n        <div onClick={this.toggleEN} className=\"en_cta\">\n          <span>{this.toggleENText()}</span>\n        </div>\n      </div>\n    );\n  };\n\n  toggleENText = () => {\n    if (this.state.toggleEN) {\n      return \"FR\";\n    } else {\n      return \"EN\";\n    }\n  };\n\n  triggerInfoContent = () => {\n    this.setState({\n      isClosedInfoPanel: !this.state.isClosedInfoPanel\n    });\n  };\n\n  infoCTAStyle = () => {\n    if (this.state.isClosedInfoPanel) {\n      return {\n        transform: \"rotate(0deg)\",\n        transitionTimingFunction: \"ease-in-out\",\n        transition: \"0.5s\"\n      };\n    } else {\n      return {\n        transform: \"rotate(135deg)\",\n        transitionTimingFunction: \"ease-in-out\",\n        transition: \"0.5s\"\n      };\n    }\n  };\n\n  renderDesktopBodyCTA = () => {\n    let {infoCmsData} = this.state;\n    let {selectedlan} = this.state;\n    let selectedLanHeadlines = `headlines_${selectedlan}`;\n    let selectedLanPara = `paragraph_${selectedlan}`;\n\n    return (\n      <SlideDown\n        closed={this.state.isClosedInfoPanel}\n        className={\"my-dropdown-slidedown\"}>\n        <div id=\"info_body_container\" className=\"info_body_container\">\n          <div className=\"info_body_container_headline\">\n            <h1>{infoCmsData[0][selectedLanHeadlines]}</h1>\n          </div>\n          <div className=\"info_body_container_ctas\">\n            <h1>{infoCmsData[0][selectedLanPara]}</h1>\n            <div className=\"info_body_container_ctas_spans\">\n            <a>\n              <span\n                id=\"body\"\n                onMouseEnter={() => this.toggleOnHoverCallCTA(\"body\")}\n                onMouseLeave={() => this.toggleOnHoverCallCTA(\"body\")}>\n                {infoCmsData[1][selectedLanHeadlines]}\n              </span>\n              </a>\n              <a\n                href={\"mailto:\" + infoCmsData[2][selectedLanPara]}\n                rel=\"noopener\"\n                target=\"_blank\"\n              >\n                <span>{infoCmsData[2][selectedLanHeadlines]}</span>\n              </a>\n              <a\n                href={infoCmsData[3][selectedLanPara]}\n                rel=\"noopener\"\n                target=\"_blank\"\n              >\n                <span>{infoCmsData[3][selectedLanHeadlines]}</span>\n              </a>\n            </div>\n          </div>\n          <div\n            onClick={this.triggerInfoContent}\n            className=\"body_cta_background_close\"\n          ></div>\n        </div>\n      </SlideDown>\n    );\n  };\n\n  toggleOnHoverCallCTA = id => {\n    let {infoCmsData} = this.state;\n    let {selectedlan} = this.state;\n\n    let selectedLanHeadlines = `headlines_${selectedlan}`;\n    let selectedLanPara = `paragraph_${selectedlan}`;\n\n    this.setState(\n      {\n        toggleOnHoverCallCTA: !this.state.toggleOnHoverCallCTA\n      },\n      () => {\n        let selectedSpan = document.getElementById(id);\n\n        if (this.state.toggleOnHoverCallCTA) {\n          selectedSpan.innerHTML = \"<p>514 839-1839</p>\";\n        } else {\n          selectedSpan.innerHTML = infoCmsData[1][selectedLanHeadlines];\n        }\n      }\n    );\n  };\n\n  renderFooterDesktop = () => {\n    let {infoCmsData} = this.state;\n    let {selectedlan} = this.state;\n\n    let selectedLanHeadlines = `headlines_${selectedlan}`;\n    let selectedLanPara = `paragraph_${selectedlan}`;\n\n    if (!this.state.isDisplayFooter) {\n      return null;\n    }\n    return (\n      <footer className=\"footer_desktop\">\n        <div className=\"footer_desktop_first\">\n          <h1>{infoCmsData[4][selectedLanHeadlines]}</h1>\n        </div>\n        <div className=\"footer_cta_outer\">\n          <div className=\"footer_cta\">\n            <a>\n              <div\n                id=\"footer\"\n                onMouseEnter={() => this.toggleOnHoverCallCTA(\"footer\")}\n                onMouseLeave={() => this.toggleOnHoverCallCTA(\"footer\")}\n              >\n                {infoCmsData[1][selectedLanHeadlines]}\n              </div>\n            </a>\n            <a\n              href={\"mailto:\" + infoCmsData[2][selectedLanPara]}\n              rel=\"noopener\"\n              target=\"_blank\"\n            >\n              <div>{infoCmsData[2][selectedLanHeadlines]}</div>\n            </a>\n            <a\n              href={infoCmsData[3][selectedLanPara]}\n              rel=\"noopener\"\n              target=\"_blank\"\n            >\n              <div>{infoCmsData[3][selectedLanHeadlines]}</div>\n            </a>\n          </div>\n          <div className=\"footer_copyright\">\n            <span className=\"copyright\">« VERY INTERESTING » ©2021</span>\n          </div>\n        </div>\n      </footer>\n    );\n  };\n\n  renderTextSimplerVersion = () => {\n\n    const {\n      loaded, \n      mainCmsData, \n      selectedlan,\n      infoCmsData\n    } = this.state;\n\n    if(!mainCmsData \n      || !loaded){\n      return null;\n    }\n\n    let selectedLanPara = `paragraph_${selectedlan}`;\n    let selectedLanHeadlines = `headlines_${selectedlan}`;\n    let simplerVersionCopy = mainCmsData.slice(0, 9);\n    let simplerVersionCopyMaped = simplerVersionCopy\n    .map((ele, index) => {\n\n      let id = `vertical_text_content_${index}`;\n\n\n      if(index === 0){\n        return (\n          <section id={id} \n          className=\"section vertical_text_content\">\n            <div className=\"slideInUp\">\n              <h1>{ReactHtmlParser(ele[selectedLanHeadlines])}</h1>\n              <p>{ReactHtmlParser(ele[selectedLanPara])}</p>\n            </div>\n          </section>\n        )\n      }else{\n        return (\n          <section id={id} className=\"section vertical_text_content\">\n            <div>\n              <h1>{ReactHtmlParser(ele[selectedLanHeadlines])}</h1>\n              <p>{ReactHtmlParser(ele[selectedLanPara])}</p>\n            </div>\n          </section>\n        )\n      }\n    })\n\n    return(\n      <main className=\"vertical_content_main\">\n        <div className=\"snap_section\">\n          {simplerVersionCopyMaped}\n          <footer className=\"section\">\n            <div className=\"vertical_text_content footer_mobile\">\n              <h1>{infoCmsData[4][selectedLanHeadlines]}</h1>\n              <a\n                href={\"tel:\" + infoCmsData[1][selectedLanPara]}\n                rel=\"noopener\"\n                target=\"_blank\">\n              <span>\n                {infoCmsData[1][selectedLanHeadlines]}\n              </span>\n              </a>\n                <a\n                  href={\"mailto:\" + infoCmsData[2][selectedLanPara]}\n                  rel=\"noopener\"\n                  target=\"_blank\">\n                <span>\n                  {infoCmsData[2][selectedLanHeadlines]}\n                </span>\n                </a>\n                <a\n                  href={infoCmsData[3][selectedLanPara]}\n                  rel=\"noopener\"\n                  target=\"_blank\">\n                <span>\n                  {infoCmsData[3][selectedLanHeadlines]}\n                </span>\n                </a>\n                <div className=\"copyright\">\n                  <p>« VERY INTERESTING » ©2021</p>\n                </div>\n                  </div>\n            </footer>\n        </div> \n      </main>\n    )\n  }\n\n\n  render() {\n    return (\n        <main className=\"main_vertical_container\">\n          {this.renderInfoDesktop()}\n          {this.renderDivsToDomDesktop()}\n          {this.renderFooterDesktop()}\n        </main>\n    );\n  }\n}\n\nexport default Desktop;\n","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/App.js",["58","59"],"/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/index.js",[],["60","61"],"/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/SvgSection.js",["62","63","64","65"],"import React from \"react\";\nimport \"./App.css\";\n\nclass SvgSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      loopCounter: 0,\n      remainingScroll: null,\n      translateYPercent: null,\n      originalImageStretch: null\n    };\n  }\n  componentDidMount() {\n\n    let props = this.props;\n    if(props.index === props.counter){\n      document.addEventListener(\"scroll\", this.scrollHandler);\n    }else{\n      return;\n    }\n  }\n\n\n  handleImageLoaded = () => {\n\n    let props = this.props;\n\n    // get the scrollHeight and viewportHeight;\n    let scrollHeight = this.props.scrollHeight;\n    let viewportHeight = this.props.viewportHeight;\n\n    // no need to repeat?\n    let index = this.props.index;\n    let divID = `container_div_${index}`;\n\n    // retrieve the imgContainer and img;\n    let imgContainer = document.querySelector(`#${divID}`);\n    let img = document.querySelector(`#${divID} img`);\n\n\n    let imageOriginalHeight = img.getBoundingClientRect().height;\n    let originalImageStretch = viewportHeight/imageOriginalHeight;\n    imgContainer.style.height = viewportHeight + \"px\";\n    img.style.transform = `scaleY(${originalImageStretch})`;\n\n      this.setState({\n        loaded: true,\n        originalImageStretch,\n        imgContainer,\n        img\n      })\n\n  };\n\n  scrollHandler = () => {\n\n    let state = this.state;\n    let props = this.props;\n\n    if (!state.loaded) {\n      return;\n    }\n\n    let imgContainer = state.imgContainer;\n    let img = state.img;\n    let body = document.body.parentNode;\n\n    let bodyScroll = (\n      body.scrollTop || body.scrollTop)\n      / (body.scrollHeight - body.clientHeight\n    ) * 100;\n\n    let remainingScroll = 100 - bodyScroll;\n    console.log(remainingScroll, \"remainingScroll: will be fed into the translateYPercentDesc : this , state.originalImageStretch\");\n\n    let translateYPercentDesc = this.definePorcentage(\n        remainingScroll, state.originalImageStretch\n    );\n    console.log(\"------\");\n    console.log(translateYPercentDesc, \"translateYPercentDesc: to apply to the scaleY\");\n\n\n    let translateYPercentDescNumbered = Number(translateYPercentDesc);\n\n\n      img.style.transform = `scaleY(${translateYPercentDesc})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n  };\n\n   definePorcentage = (percent, total) => {\n        return ((percent/ 100) * total).toFixed(2)\n    }\n\n\n\n  render() {\n    if(!this.props){\n      return null;\n    }\n\n  let index = this.props.index;\n  let divID = `container_div_${index}`;\n\n\n    return (\n        <div className=\"main_vertical_container_inner\">\n          <div id={divID}>\n            <img\n              onLoad={this.handleImageLoaded}\n              src=\"https://bit.ly/3nXBlMo\"\n              alt=\"XXI\"\n            />\n          </div>\n          <div className=\"text_container\">\n            <h1>SvgSection</h1>\n            <p>fvdfv</p>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default SvgSection;\n","/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/reportWebVitals.js",[],["66","67"],"/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/Mobile.js",["68","69","70","71","72","73","74","75","76","77","78","79"],"/Users/cyrus/Documents/Commissioned/Paprika - Very interesting/my-app/src/mock_data.js",["80"],"\nconst mock_data = module.exports = {\n  entriesImgDesktop: [\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1618381696/paprika%20-%20very%20interesting/svg_6/very.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1618381696/paprika%20-%20very%20interesting/svg_6/very.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1618381695/paprika%20-%20very%20interesting/svg_6/sting.svg\"},\n  ],\n  entriesMobile: [\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1612818874/paprika%20-%20very%20interesting/M01VERYINTE_v3.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1610211325/paprika%20-%20very%20interesting/M02RESTING.svg\"},\n  ],\n  loadingImg: [\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1613353861/paprika%20-%20very%20interesting/VERYINTERESTING.svg\"}\n  ],\n};\n",["81","82"],{"ruleId":"83","severity":1,"message":"84","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"87","line":96,"column":7,"nodeType":"85","messageId":"86","endLine":96,"endColumn":20},{"ruleId":"83","severity":1,"message":"88","line":97,"column":7,"nodeType":"85","messageId":"86","endLine":97,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":137,"column":36,"nodeType":"91","messageId":"92","endLine":137,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":141,"column":35,"nodeType":"91","messageId":"92","endLine":141,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":154,"column":36,"nodeType":"91","messageId":"92","endLine":154,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":158,"column":35,"nodeType":"91","messageId":"92","endLine":158,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":191,"column":36,"nodeType":"91","messageId":"92","endLine":191,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":195,"column":35,"nodeType":"91","messageId":"92","endLine":195,"endColumn":37},{"ruleId":"83","severity":1,"message":"93","line":332,"column":11,"nodeType":"85","messageId":"86","endLine":332,"endColumn":16},{"ruleId":"83","severity":1,"message":"94","line":586,"column":15,"nodeType":"85","messageId":"86","endLine":586,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":709,"column":11,"nodeType":"97","endLine":709,"endColumn":135},{"ruleId":"98","severity":1,"message":"99","line":765,"column":13,"nodeType":"97","endLine":765,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":776,"column":17,"nodeType":"102","endLine":776,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":783,"column":17,"nodeType":"102","endLine":783,"endColumn":32},{"ruleId":"83","severity":1,"message":"103","line":803,"column":9,"nodeType":"85","messageId":"86","endLine":803,"endColumn":24},{"ruleId":"98","severity":1,"message":"99","line":838,"column":13,"nodeType":"97","endLine":838,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":850,"column":15,"nodeType":"102","endLine":850,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":857,"column":15,"nodeType":"102","endLine":857,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":925,"column":17,"nodeType":"102","endLine":925,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":933,"column":19,"nodeType":"102","endLine":933,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":941,"column":19,"nodeType":"102","endLine":941,"endColumn":34},{"ruleId":"83","severity":1,"message":"104","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"105","line":109,"column":10,"nodeType":"85","messageId":"86","endLine":109,"endColumn":18},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"83","severity":1,"message":"110","line":28,"column":9,"nodeType":"85","messageId":"86","endLine":28,"endColumn":14},{"ruleId":"83","severity":1,"message":"111","line":31,"column":9,"nodeType":"85","messageId":"86","endLine":31,"endColumn":21},{"ruleId":"83","severity":1,"message":"110","line":60,"column":9,"nodeType":"85","messageId":"86","endLine":60,"endColumn":14},{"ruleId":"83","severity":1,"message":"112","line":85,"column":9,"nodeType":"85","messageId":"86","endLine":85,"endColumn":38},{"ruleId":"106","replacedBy":"113"},{"ruleId":"108","replacedBy":"114"},{"ruleId":"83","severity":1,"message":"115","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":18},{"ruleId":"83","severity":1,"message":"116","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":23},{"ruleId":"83","severity":1,"message":"117","line":94,"column":7,"nodeType":"85","messageId":"86","endLine":94,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":134,"column":12,"nodeType":"97","endLine":134,"endColumn":136},{"ruleId":"100","severity":1,"message":"101","line":201,"column":18,"nodeType":"102","endLine":201,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":209,"column":18,"nodeType":"102","endLine":209,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":217,"column":18,"nodeType":"102","endLine":217,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":243,"column":11,"nodeType":"97","endLine":249,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":311,"column":17,"nodeType":"102","endLine":311,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":319,"column":19,"nodeType":"102","endLine":319,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":327,"column":19,"nodeType":"102","endLine":327,"endColumn":34},{"ruleId":"83","severity":1,"message":"118","line":2,"column":7,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},"no-unused-vars","'ScrollSnap' is defined but never used.","Identifier","unusedVar","'viewportWidth' is assigned a value but never used.","'loaded' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'imgID' is assigned a value but never used.","'selectedDivId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'selectedLanPara' is assigned a value but never used.","'SvgSection' is defined but never used.","'mockData' is assigned a value but never used.","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"'props' is assigned a value but never used.","'scrollHeight' is assigned a value but never used.","'translateYPercentDescNumbered' is assigned a value but never used.",["121"],["122"],"'AnimateKeyframes' is defined but never used.","'ScrollDirection' is defined but never used.","'originalImageStretch' is assigned a value but never used.","'mock_data' is assigned a value but never used.",["121"],["122"],"no-global-assign","no-unsafe-negation"]