[{"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/App.js":"1","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/TextComponent.js":"2","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/reportWebVitals.js":"3","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/index.js":"4","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/SvgSection.js":"5","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/mock_data.js":"6","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Desktop.js":"7","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Mobile.js":"8"},{"size":1280,"mtime":1610988899342,"results":"9","hashOfConfig":"10"},{"size":224,"mtime":1608650548095,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608610226311,"results":"12","hashOfConfig":"10"},{"size":500,"mtime":1608610226310,"results":"13","hashOfConfig":"10"},{"size":3055,"mtime":1609936305537,"results":"14","hashOfConfig":"10"},{"size":3318,"mtime":1610380358918,"results":"15","hashOfConfig":"10"},{"size":20507,"mtime":1611853429765,"results":"16","hashOfConfig":"10"},{"size":18051,"mtime":1610384577666,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"19vwpco",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/App.js",["41","42"],"import React from \"react\";\nimport Tabletop from \"tabletop\";\nimport Desktop from \"./Desktop.js\";\nimport Mobile from \"./Mobile.js\";\nimport SvgSection from \"./SvgSection.js\"\nimport mock_data from \"./mock_data.js\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewportWidth: null,\n      data: null\n    };\n  }\n\n\n  componentDidMount(){\n\n      Tabletop.init({\n      key: '1N5WFhAZpqz6Spgr6pQowDRJLmr_Ni99_sh95TCArGQ8',\n      callback: googleData => {\n        this.setState({\n          data: googleData\n        })\n      },\n      simpleSheet: true\n    })\n\n\n    window.addEventListener(\"resize\", this.resizeHandler);\n    let viewportWidth = window.innerWidth;\n\n    this.setState({\n      viewportWidth\n    });\n  }\n\n\n  resizeHandler = () => {\n\n    let viewportWidth = window.innerWidth;\n    this.setState({\n      viewportWidth\n    });\n\n  }\n\n  render() {\n\n    let viewportWidth = this.state.viewportWidth;\n    if(!viewportWidth){\n      return \"loading\"\n    }\n\n    console.log(viewportWidth);\n\n    if(viewportWidth > 600){\n      return (\n        <div>\n          <Desktop />\n        </div>\n      );\n    }else{\n      return (\n        <div>\n          <Mobile />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/TextComponent.js",[],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/reportWebVitals.js",[],["43","44"],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/index.js",[],["45","46"],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/SvgSection.js",["47","48","49","50"],"import React from \"react\";\nimport \"./App.css\";\n\nclass SvgSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      loopCounter: 0,\n      remainingScroll: null,\n      translateYPercent: null,\n      originalImageStretch: null\n    };\n  }\n  componentDidMount() {\n\n    let props = this.props;\n    if(props.index === props.counter){\n      document.addEventListener(\"scroll\", this.scrollHandler);\n    }else{\n      return;\n    }\n  }\n\n\n  handleImageLoaded = () => {\n\n    let props = this.props;\n\n    // get the scrollHeight and viewportHeight;\n    let scrollHeight = this.props.scrollHeight;\n    let viewportHeight = this.props.viewportHeight;\n\n    // no need to repeat?\n    let index = this.props.index;\n    let divID = `container_div_${index}`;\n\n    // retrieve the imgContainer and img;\n    let imgContainer = document.querySelector(`#${divID}`);\n    let img = document.querySelector(`#${divID} img`);\n\n\n    let imageOriginalHeight = img.getBoundingClientRect().height;\n    let originalImageStretch = viewportHeight/imageOriginalHeight;\n    imgContainer.style.height = viewportHeight + \"px\";\n    img.style.transform = `scaleY(${originalImageStretch})`;\n\n      this.setState({\n        loaded: true,\n        originalImageStretch,\n        imgContainer,\n        img\n      })\n\n  };\n\n  scrollHandler = () => {\n\n    let state = this.state;\n    let props = this.props;\n\n    if (!state.loaded) {\n      return;\n    }\n\n    let imgContainer = state.imgContainer;\n    let img = state.img;\n    let body = document.body.parentNode;\n\n    let bodyScroll = (\n      body.scrollTop || body.scrollTop)\n      / (body.scrollHeight - body.clientHeight\n    ) * 100;\n\n    let remainingScroll = 100 - bodyScroll;\n    console.log(remainingScroll, \"remainingScroll: will be fed into the translateYPercentDesc : this , state.originalImageStretch\");\n\n    let translateYPercentDesc = this.definePorcentage(\n        remainingScroll, state.originalImageStretch\n    );\n    console.log(\"------\");\n    console.log(translateYPercentDesc, \"translateYPercentDesc: to apply to the scaleY\");\n\n\n    let translateYPercentDescNumbered = Number(translateYPercentDesc);\n\n\n      img.style.transform = `scaleY(${translateYPercentDesc})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n  };\n\n   definePorcentage = (percent, total) => {\n        return ((percent/ 100) * total).toFixed(2)\n    }\n\n\n\n  render() {\n    if(!this.props){\n      return null;\n    }\n\n  let index = this.props.index;\n  let divID = `container_div_${index}`;\n\n\n    return (\n        <div className=\"main_vertical_container_inner\">\n          <div id={divID}>\n            <img\n              onLoad={this.handleImageLoaded}\n              src=\"https://bit.ly/3nXBlMo\"\n              alt=\"XXI\"\n            />\n          </div>\n          <div className=\"text_container\">\n            <h1>SvgSection</h1>\n            <p>fvdfv</p>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default SvgSection;\n","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/mock_data.js",["51"],"const mock_data = module.exports = {\n  entriesImgDesktop: [\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1608683762/paprika%20-%20very%20interesting/01VERYI.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1608683811/paprika%20-%20very%20interesting/02NTERE.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1608683839/paprika%20-%20very%20interesting/03STING.svg\"},\n  ],\n  entriesMobile: [\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1610211278/paprika%20-%20very%20interesting/M01VERYINTE.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1610211325/paprika%20-%20very%20interesting/M02RESTING.svg\"}\n  ],\n  entriesText: [\n    {\n      headlines: \"Dans une économie de l’attention, il faut se démarquer.\",\n      description: null\n    },\n    {\n      headlines: \"Pour rendre nos clients «Very Interesting», on combine data et Dada. <br /><br /> - Hum… Intéressant… <br /> « Very »\",\n      description: null\n    },\n    {\n      headlines: \"TOUT LE MONDE N’EN A QUE POUR LES DONNÉES. <br /><br /> MAIS LES DONNÉES EN ELLES-MÊMES NE SUFFISENT PAS.\",\n      description: null\n    },\n    {\n      headlines: \"« Very Interesting » ajoute un élément de surprise, de joie, d’incongru.\",\n      description: \"On intercepte la clientèle et on la garde fortement intéressée par ce que font nos clients.\"\n    },\n    {\n      headlines: \"NOS « Very Interesting » SERVICES\",\n      description: \"On fait en sorte que les bonnes personnes fassent ce que nos clients souhaitent\"\n    },\n    {\n      headlines: \"<ul><li>Ciblage</li></li>Analyse de performance</li><li>Refonte de l’expérience de marque (design, rédaction)</li><li>Création de contenu</li><li>Gardiennage d’animaux de compagnie.</li></ul>\",\n      description: null\n    },\n    {\n      headlines: \"Rencontrez des gens <br /> « Very Interesting »\",\n      description: null\n    },\n    {\n      headlines: \"Harry <br /> Wakefield\",\n      description: \"A mené une carrière en agence (Cossette, Taxi) et du côté client (Bell, Sympatico, Téléglobe, Pages jaunes); Expérience en communication et en marketing de produits; Spécialiste des outils CRM, web et médias sociaux; Agit depuis 2009 à titre de conseiller en marketing numérique pour des entreprises de technologie de taille moyenne en Europe et au Canada dont TelcoBridges, une entreprise d’ingénierie logicielle et d’équipement de télécommunication.\"\n    },\n    {\n      headlines: \"Pierre <br />  Laramée\",\n      description: \"Co-fondateur de l’agence Tam-Tam Publicité; A été concepteur-rédacteur, directeur de création et président; Impliqué sur des marques telles que Vidéotron, Télébec, le Fonds de solidarité FTQ et l’Université du Québec ; Agit depuis 2010 à titre de consultant et concepteur pour des agences et des clients directs sur des comptes tels que Lafond, Convectair, Bureau du design de la Ville de Montréal, Bernard & Fabien Assurances, Air Inuit, Mobilia et Université de Montréal.\"\n    }\n  ],\n  entriesInfoText: [\n    {\n      text: \"« Very Interesting » rend ses clients plus intéressants, plus remarqués, plus sollicités\"\n    },\n    {\n      text: \"Devenir une Cie « Very interesting » ?\"\n    }\n  ]\n};\n",["52","53"],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Desktop.js",["54","55","56","57","58","59","60"],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Mobile.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import React from \"react\";\nimport mockData from \"./mock_data.js\";\nimport \"./App.css\";\n\nclass Desktop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      counter: 0,\n      selectedDivId: 0,\n      scrollDirection: null,\n      updatedHeightOfPage: null,\n      viewportHeight: null,\n      mockData: null,\n      dataToDivs: null,\n      mockDataTextSubArrays: null,\n      originalImageHeight: null,\n      originalImageStretch: null,\n      originalImageStretchArray: [],\n      isTriggeredInfoContent: false\n    };\n  }\n\n  componentDidMount(){\n\n    document.addEventListener(\"scroll\", this.scrollHandler);\n    window.addEventListener(\"resize\", this.resizeHandler);\n\n\n    let viewportHeight = window.innerHeight;\n\n    let updatedHeightOfPage = viewportHeight*15;\n    document.body.style.height = `${updatedHeightOfPage}px`;\n\n\n    this.setState({\n      updatedHeightOfPage,\n      viewportHeight,\n      mockData,\n    }, () => {\n\n      let mockDataText = this.state.mockData.entriesText;\n\n\n      let mockDataTextSubArrays = [\n          mockDataText.slice(0, 2),\n          mockDataText.slice(2, 4),\n          mockDataText.slice(4, 6),\n          mockDataText.slice(6, 8),\n          mockDataText.slice(9,10),\n      ];\n\n      this.setState({\n        mockDataTextSubArrays\n      }, () => {\n        this.renderDataToDivs();\n      })\n    })\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n\n    let counter = this.state.counter;\n    let selectedDivId = this.state.selectedDivId;\n\n    let divTextH1 = [...document.getElementsByClassName('div_text_h1')];\n    let divTextP = [...document.getElementsByClassName('div_text_p')];\n\n    let mockDataText = this.state.mockData.entriesText;\n\n    if(selectedDivId !== prevState.selectedDivId){\n\n      if(selectedDivId === 0){\n\n        console.log(this.state.originalImageStretch, \"here\");\n\n        let divID = `container_div_${1}`;\n        let imgContainer = document.querySelector(`#${divID}`);\n        let img = document.querySelector(`#${divID} img`);\n\n        // to optimze;\n        let originalImageStretch = 30;\n\n        img.style.transform = `scaleY(${originalImageStretch})`;\n        let newImgContainerHeight = img.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n\n\n      }\n      if(selectedDivId === 1){\n\n        let divID = `container_div_${0}`;\n        let imgContainer = document.querySelector(`#${divID}`);\n        let img = document.querySelector(`#${divID} img`);\n\n        // to optimze;\n        let originalImageStretch = 30;\n\n        img.style.transform = `scaleY(${originalImageStretch})`;\n        let newImgContainerHeight = img.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n\n      }\n\n    }\n\n\n\n      if (counter !== prevState.counter) {\n\n        if(counter >= 0 && counter < 2){\n\n\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataText[0].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = \"\"\n          })\n        }\n\n        if(counter >= 2 && counter < 4){\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataText[1].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = mockDataText[1].description\n          })\n        }\n\n        if(counter >= 4 && counter < 6){\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataText[2].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = mockDataText[2].description\n          })\n        }\n\n        if(counter >= 6 && counter < 8){\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataText[3].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = mockDataText[3].description\n          })\n        }\n\n        if(counter >= 8 && counter < 10){\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataText[4].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = mockDataText[4].description\n          })\n        }\n\n        if(counter >= 10 && counter < 12){\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataText[5].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = mockDataText[5].description\n          })\n        }\n\n        if(counter >= 12 && counter < 13){\n\n          let container_div_h1_0 = document.getElementById(\"container_div_h1_0\").innerHTML =  mockDataText[7].headlines\n          let container_div_p_0 = document.getElementById(\"container_div_p_0\").innerHTML =  mockDataText[7].description;\n\n\n          let container_div_h1_1 = document.getElementById(\"container_div_h1_1\").innerHTML =  mockDataText[8].headlines\n          let container_div_p_1 = document.getElementById(\"container_div_p_1\").innerHTML =  mockDataText[8].description;\n\n\n        }\n\n\n\n      }\n\n\n    }\n\n\n  handleImageLoaded = (divID) => {\n    this.setState({\n      loaded: true\n    }, () => {\n\n      let viewportHeight = this.state.viewportHeight;\n      let imgContainer = document.querySelector(`#${divID}`);\n      let img = document.querySelector(`#${divID} img`);\n\n      let aligningSecondDiv = this.defineValueFromPorcentage(2, viewportHeight);\n\n\n      let originalImageHeight = img.getBoundingClientRect().height;\n\n      let originalImageStretch = (viewportHeight + 1.4*aligningSecondDiv)/originalImageHeight;\n\n\n      // to optimize;\n      this.setState({\n        originalImageStretchArray: [...this.state.originalImageStretchArray, originalImageStretch]\n      })\n\n\n      imgContainer.style.height = viewportHeight + \"px\";\n      img.style.transform = `scaleY(${originalImageStretch})`;\n\n      this.setState({\n        originalImageHeight,\n        originalImageStretch\n      })\n\n\n    })\n  }\n\n\n  renderDataToDivs = () => {\n\n    let mockData = this.state.mockData;\n\n    let dataToDivs = mockData.entriesMobile.map((ele, index) => {\n\n      let divID = `container_div_${index}`;\n      let divIDH1 = `container_div_h1_${index}`;\n      let divIP = `container_div_p_${index}`;\n\n      return (\n        <div className=\"main_vertical_container_inner\">\n          <div id={divID}>\n              <img\n                onLoad={() => {this.handleImageLoaded(divID)}}\n                src={ele.img}\n                alt={ele.img}\n              />\n            </div>\n            <div className=\"text_container\">\n              <h1\n                id={divIDH1}\n                className=\"div_text_h1\">\n                  Dans une économie de l’attention, il faut se démarquer.\n              </h1>\n              <p\n                id={divIP}\n                className=\"div_text_p\">\n\n              </p>\n            </div>\n        </div>\n      )\n    })\n    this.setState({\n      dataToDivs\n    })\n  }\n\n\n  resizeHandler = () => {\n\n    let viewportHeight = window.innerHeight;\n    this.setState({\n      viewportHeight,\n    }, () => {\n      // make the resize here;\n    });\n  }\n\n\n\n  // scrollHandler here;\n  scrollHandler = (event) => {\n\n    if(!this.state.originalImageStretch){\n      return null;\n    }\n\n    let deltaY = event.deltaY;\n    if (deltaY < 0){\n      this.setState({\n        scrollDirection: \"up\"\n      })\n    }else{\n      this.setState({\n        scrollDirection: \"down\"\n      })\n    }\n\n    let numberOfPixelScrolled = window.scrollY;\n    let viewportHeight = this.state.viewportHeight;\n\n\n    if (numberOfPixelScrolled > 0\n      && numberOfPixelScrolled < viewportHeight) {\n\n        this.setState({\n          counter: 0,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight\n      && numberOfPixelScrolled < viewportHeight*2) {\n\n\n        this.setState({\n          counter: 1,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*2\n      && numberOfPixelScrolled < viewportHeight*3) {\n\n        this.setState({\n          counter: 2,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*3\n      && numberOfPixelScrolled < viewportHeight*4) {\n\n        this.setState({\n          counter: 3,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*4\n      && numberOfPixelScrolled < viewportHeight*5) {\n\n        this.setState({\n          counter: 4,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*5\n      && numberOfPixelScrolled < viewportHeight*6) {\n\n        this.setState({\n          counter: 5,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*6\n      && numberOfPixelScrolled < viewportHeight*7) {\n\n        this.setState({\n          counter: 6,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*7\n      && numberOfPixelScrolled < viewportHeight*8) {\n\n        this.setState({\n          counter: 7,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*8\n      && numberOfPixelScrolled < viewportHeight*9) {\n\n        this.setState({\n          counter: 8,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*9\n      && numberOfPixelScrolled < viewportHeight*10) {\n\n        this.setState({\n          counter: 9,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*10\n      && numberOfPixelScrolled < viewportHeight*11) {\n\n        this.setState({\n          counter: 10,\n          selectedDivId: 1\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*11\n      && numberOfPixelScrolled < viewportHeight*12) {\n\n        this.setState({\n          counter: 11,\n          selectedDivId: 1\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*12\n      && numberOfPixelScrolled < viewportHeight*13) {\n\n        this.setState({\n          counter: 12,\n          selectedDivId: 1\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, 0, \"up\");\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n    }\n\n\n  };\n\n\n  handleAnimation = (counter, selectedDivId, animDirection, single) => {\n\n    // to optimze;\n    // this.handleDivTextChange(counter)\n\n    let divID = `container_div_${selectedDivId}`;\n    let imgContainer = document.querySelector(`#${divID}`);\n    let img = document.querySelector(`#${divID} img`);\n    let numberOfPixelScrolled = window.scrollY;\n    let viewportHeight = this.state.viewportHeight;\n    let originalImageStretch = this.state.originalImageStretch;\n\n\n    let scrolledPorcentage = this.definePorcentage(\n      (numberOfPixelScrolled - this.state.counter * viewportHeight),\n      viewportHeight)\n    ;\n    let remainingScrollPorcentage = 100-scrolledPorcentage;\n\n    let translateYPorcentageUp = this.defineValueFromPorcentage(\n        remainingScrollPorcentage,\n        originalImageStretch\n    );\n\n    let translateYPorcentageDown = this.defineValueFromPorcentage(\n        scrolledPorcentage,\n        originalImageStretch\n    );\n\n    if(animDirection === \"up\"){\n\n      img.style.transform = `scaleY(${translateYPorcentageUp})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n\n      if(translateYPorcentageUp < 1){\n        img.style.transform = `scaleY(1)`;\n        let newImgContainerHeight = img.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n      }\n\n    }\n\n    if(animDirection === \"down\"){\n\n      img.style.transform = `scaleY(${translateYPorcentageDown})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n\n      if(translateYPorcentageDown < 1){\n        img.style.transform = `scaleY(1)`;\n        let newImgContainerHeight = img.getBoundingClientRect().height;\n        imgContainer.style.height = newImgContainerHeight + \"px\";\n      }\n    }\n\n    if(!single){\n\n    }\n\n  }\n\n\n  handleResetPreviousDivHeightDown = (id) => {\n\n\n    let scrollDirection = this.state.scrollDirection;\n\n    if(scrollDirection === \"down\"){\n\n      let previousDivId = id;\n\n      if(id === \"1\"){\n        let previousDivId = \"0\";\n\n      }else{\n        let previousDivId = \"1\";\n      }\n\n      let divID = `container_div_${previousDivId}`;\n\n      let imgContainer = document.querySelector(`#${divID}`);\n      let img = document.querySelector(`#${divID} img`);\n      let originalImageStretch = this.state.originalImageStretch;\n\n      img.style.transform = `scaleY(${originalImageStretch})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n\n    }else{\n      return null;\n    }\n  };\n\n\n  handleResetPreviousDivHeightUp = (id) => {\n\n\n    let scrollDirection = this.state.scrollDirection;\n\n    if(scrollDirection === \"down\"){\n      return null;\n    }else{\n\n      let previousDivId = id;\n\n      if(id === \"1\"){\n        let previousDivId = \"0\";\n\n      }else{\n        let previousDivId = \"1\";\n      }\n\n\n      let divID = `container_div_${previousDivId}`;\n\n      let imgContainer = document.querySelector(`#${divID}`);\n      let img = document.querySelector(`#${divID} img`);\n\n\n      let originalImageStretch = this.state.originalImageStretch;\n      img.style.transform = `scaleY(${originalImageStretch})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n    }\n\n  }\n\n  definePorcentage = (percent, total) => {\n      let porcentage = (percent/total)*100;\n      return porcentage\n   }\n\n\n   defineValueFromPorcentage = (percentage, total) => {\n     let value =  ((percentage * total)/100);\n     return value;\n   }\n\n   renderDivsToDom = () => {\n     if(!this.state.dataToDivs){\n       return \"loading\"\n     }else{\n       return this.state.dataToDivs;\n     }\n   };\n\n\n   renderInfo = () => {\n     return (\n       <div className=\"info_main_container\">\n          {this.renderInfoCTA()}\n          {this.renderBodyCTA()}\n       </div>\n     )\n   }\n\n\n   renderInfoCTA = () => {\n     return (\n       <div\n          className=\"info_cta_container\"\n          onClick={this.triggerInfoContent}\n          style={this.infoCTAStyle()}>\n          <span>\n            +\n          </span>\n       </div>\n     )\n   };\n\n   triggerInfoContent = () => {\n     this.setState({\n       isTriggeredInfoContent: !this.state.isTriggeredInfoContent\n     })\n   }\n\n   infoCTAStyle = () => {\n     if(!this.state.isTriggeredInfoContent){\n       return {\n         transform: \"rotate(0deg)\",\n         transition: \"0.1s\"\n       }\n     }else{\n       return {\n         transform: \"rotate(45deg)\",\n         transition: \"0.1s\"\n       }\n     }\n   }\n\n   renderBodyCTA = () => {\n     if(!this.state.isTriggeredInfoContent){\n       return null;\n     }\n     return (\n       <div className=\"info_body_container\">\n          <div className=\"info_body_container_headline\">\n            <h1>« Very interesting » est une firme spécialisée en lorem ipsum lorem</h1>\n          </div>\n          <div className=\"info_body_container_ctas\">\n            <div className=\"info_body_container_ctas_spans\">\n                <span>\n                  EN SAVOIR PLUS\n                </span>\n            </div>\n          </div>\n          <div className=\"info_body_container_end_para\">\n            <h1>Vous aimeriez savoir comment votre cie peut devenir « Very interesting » ?</h1>\n          </div>\n       </div>\n     )\n   }\n\n\n\n  render() {\n    return (\n      <div className=\"main_vertical_container\">\n        {this.renderInfo()}\n        {this.renderDivsToDom()}\n      </div>\n    );\n  }\n}\n\nexport default Desktop;\n",{"ruleId":"81","severity":1,"message":"82","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"85","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":17},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"81","severity":1,"message":"92","line":28,"column":9,"nodeType":"83","messageId":"84","endLine":28,"endColumn":14},{"ruleId":"81","severity":1,"message":"93","line":31,"column":9,"nodeType":"83","messageId":"84","endLine":31,"endColumn":21},{"ruleId":"81","severity":1,"message":"92","line":60,"column":9,"nodeType":"83","messageId":"84","endLine":60,"endColumn":14},{"ruleId":"81","severity":1,"message":"94","line":85,"column":9,"nodeType":"83","messageId":"84","endLine":85,"endColumn":38},{"ruleId":"81","severity":1,"message":"95","line":1,"column":7,"nodeType":"83","messageId":"84","endLine":1,"endColumn":16},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":72,"column":38,"nodeType":"100","messageId":"101","endLine":72,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":75,"column":37,"nodeType":"100","messageId":"101","endLine":75,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":84,"column":40,"nodeType":"100","messageId":"101","endLine":84,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":87,"column":39,"nodeType":"100","messageId":"101","endLine":87,"endColumn":41},{"ruleId":"98","severity":1,"message":"99","line":96,"column":38,"nodeType":"100","messageId":"101","endLine":96,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":99,"column":37,"nodeType":"100","messageId":"101","endLine":99,"endColumn":39},{"ruleId":"81","severity":1,"message":"102","line":419,"column":15,"nodeType":"83","messageId":"84","endLine":419,"endColumn":28},{"ruleId":"98","severity":1,"message":"99","line":116,"column":38,"nodeType":"100","messageId":"101","endLine":116,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":119,"column":37,"nodeType":"100","messageId":"101","endLine":119,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":125,"column":38,"nodeType":"100","messageId":"101","endLine":125,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":128,"column":37,"nodeType":"100","messageId":"101","endLine":128,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":134,"column":38,"nodeType":"100","messageId":"101","endLine":134,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":137,"column":37,"nodeType":"100","messageId":"101","endLine":137,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":143,"column":38,"nodeType":"100","messageId":"101","endLine":143,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":146,"column":37,"nodeType":"100","messageId":"101","endLine":146,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":152,"column":38,"nodeType":"100","messageId":"101","endLine":152,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":155,"column":37,"nodeType":"100","messageId":"101","endLine":155,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":161,"column":38,"nodeType":"100","messageId":"101","endLine":161,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":164,"column":37,"nodeType":"100","messageId":"101","endLine":164,"endColumn":39},{"ruleId":"81","severity":1,"message":"103","line":171,"column":15,"nodeType":"83","messageId":"84","endLine":171,"endColumn":33},{"ruleId":"81","severity":1,"message":"104","line":172,"column":15,"nodeType":"83","messageId":"84","endLine":172,"endColumn":32},{"ruleId":"81","severity":1,"message":"105","line":175,"column":15,"nodeType":"83","messageId":"84","endLine":175,"endColumn":33},{"ruleId":"81","severity":1,"message":"106","line":176,"column":15,"nodeType":"83","messageId":"84","endLine":176,"endColumn":32},{"ruleId":"81","severity":1,"message":"107","line":549,"column":13,"nodeType":"83","messageId":"84","endLine":549,"endColumn":26},{"ruleId":"81","severity":1,"message":"107","line":552,"column":13,"nodeType":"83","messageId":"84","endLine":552,"endColumn":26},{"ruleId":"81","severity":1,"message":"107","line":583,"column":13,"nodeType":"83","messageId":"84","endLine":583,"endColumn":26},{"ruleId":"81","severity":1,"message":"107","line":586,"column":13,"nodeType":"83","messageId":"84","endLine":586,"endColumn":26},"no-unused-vars","'SvgSection' is defined but never used.","Identifier","unusedVar","'mock_data' is defined but never used.","no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"'props' is assigned a value but never used.","'scrollHeight' is assigned a value but never used.","'translateYPercentDescNumbered' is assigned a value but never used.","'mock_data' is assigned a value but never used.",["108"],["109"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'selectedDivId' is assigned a value but never used.","'container_div_h1_0' is assigned a value but never used.","'container_div_p_0' is assigned a value but never used.","'container_div_h1_1' is assigned a value but never used.","'container_div_p_1' is assigned a value but never used.","'previousDivId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]