[{"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/App.js":"1","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/TextComponent.js":"2","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/reportWebVitals.js":"3","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/index.js":"4","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/SvgSection.js":"5","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/mock_data.js":"6","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Desktop.js":"7","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Mobile.js":"8"},{"size":1247,"mtime":1612331907287,"results":"9","hashOfConfig":"10"},{"size":224,"mtime":1608650548095,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608610226311,"results":"12","hashOfConfig":"10"},{"size":500,"mtime":1608610226310,"results":"13","hashOfConfig":"10"},{"size":3055,"mtime":1609936305537,"results":"14","hashOfConfig":"10"},{"size":3202,"mtime":1612328031952,"results":"15","hashOfConfig":"10"},{"size":21662,"mtime":1612335200069,"results":"16","hashOfConfig":"10"},{"size":23031,"mtime":1612365066833,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"19vwpco",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/App.js",["41","42"],"import React from \"react\";\nimport Tabletop from \"tabletop\";\nimport Desktop from \"./Desktop.js\";\nimport Mobile from \"./Mobile.js\";\nimport SvgSection from \"./SvgSection.js\"\nimport mock_data from \"./mock_data.js\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewportWidth: null,\n      data: null\n    };\n  }\n\n\n  componentDidMount(){\n\n      Tabletop.init({\n      key: '1N5WFhAZpqz6Spgr6pQowDRJLmr_Ni99_sh95TCArGQ8',\n      callback: googleData => {\n        this.setState({\n          data: googleData\n        })\n      },\n      simpleSheet: true\n    })\n\n\n    window.addEventListener(\"resize\", this.resizeHandler);\n    let viewportWidth = window.innerWidth;\n\n    this.setState({\n      viewportWidth\n    });\n  }\n\n\n  resizeHandler = () => {\n\n    let viewportWidth = window.innerWidth;\n    this.setState({\n      viewportWidth\n    });\n\n  }\n\n  render() {\n\n    let viewportWidth = this.state.viewportWidth;\n    if(!viewportWidth){\n      return \"loading\"\n    }\n\n    if(viewportWidth > 600){\n      return (\n        <div>\n          <Desktop />\n        </div>\n      );\n    }else{\n      return (\n        <div>\n          <Mobile />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/TextComponent.js",[],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/reportWebVitals.js",[],["43","44"],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/index.js",[],["45","46"],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/SvgSection.js",["47","48","49","50"],"import React from \"react\";\nimport \"./App.css\";\n\nclass SvgSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      loopCounter: 0,\n      remainingScroll: null,\n      translateYPercent: null,\n      originalImageStretch: null\n    };\n  }\n  componentDidMount() {\n\n    let props = this.props;\n    if(props.index === props.counter){\n      document.addEventListener(\"scroll\", this.scrollHandler);\n    }else{\n      return;\n    }\n  }\n\n\n  handleImageLoaded = () => {\n\n    let props = this.props;\n\n    // get the scrollHeight and viewportHeight;\n    let scrollHeight = this.props.scrollHeight;\n    let viewportHeight = this.props.viewportHeight;\n\n    // no need to repeat?\n    let index = this.props.index;\n    let divID = `container_div_${index}`;\n\n    // retrieve the imgContainer and img;\n    let imgContainer = document.querySelector(`#${divID}`);\n    let img = document.querySelector(`#${divID} img`);\n\n\n    let imageOriginalHeight = img.getBoundingClientRect().height;\n    let originalImageStretch = viewportHeight/imageOriginalHeight;\n    imgContainer.style.height = viewportHeight + \"px\";\n    img.style.transform = `scaleY(${originalImageStretch})`;\n\n      this.setState({\n        loaded: true,\n        originalImageStretch,\n        imgContainer,\n        img\n      })\n\n  };\n\n  scrollHandler = () => {\n\n    let state = this.state;\n    let props = this.props;\n\n    if (!state.loaded) {\n      return;\n    }\n\n    let imgContainer = state.imgContainer;\n    let img = state.img;\n    let body = document.body.parentNode;\n\n    let bodyScroll = (\n      body.scrollTop || body.scrollTop)\n      / (body.scrollHeight - body.clientHeight\n    ) * 100;\n\n    let remainingScroll = 100 - bodyScroll;\n    console.log(remainingScroll, \"remainingScroll: will be fed into the translateYPercentDesc : this , state.originalImageStretch\");\n\n    let translateYPercentDesc = this.definePorcentage(\n        remainingScroll, state.originalImageStretch\n    );\n    console.log(\"------\");\n    console.log(translateYPercentDesc, \"translateYPercentDesc: to apply to the scaleY\");\n\n\n    let translateYPercentDescNumbered = Number(translateYPercentDesc);\n\n\n      img.style.transform = `scaleY(${translateYPercentDesc})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n  };\n\n   definePorcentage = (percent, total) => {\n        return ((percent/ 100) * total).toFixed(2)\n    }\n\n\n\n  render() {\n    if(!this.props){\n      return null;\n    }\n\n  let index = this.props.index;\n  let divID = `container_div_${index}`;\n\n\n    return (\n        <div className=\"main_vertical_container_inner\">\n          <div id={divID}>\n            <img\n              onLoad={this.handleImageLoaded}\n              src=\"https://bit.ly/3nXBlMo\"\n              alt=\"XXI\"\n            />\n          </div>\n          <div className=\"text_container\">\n            <h1>SvgSection</h1>\n            <p>fvdfv</p>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default SvgSection;\n",["51","52"],"/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/mock_data.js",["53"],"const mock_data = module.exports = {\n  entriesImgDesktop: [\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1608683762/paprika%20-%20very%20interesting/01VERYI.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1608683811/paprika%20-%20very%20interesting/02NTERE.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1608683839/paprika%20-%20very%20interesting/03STING.svg\"},\n  ],\n  entriesMobile: [\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1610211278/paprika%20-%20very%20interesting/M01VERYINTE.svg\"},\n    {img: \"https://res.cloudinary.com/www-c-t-l-k-com/image/upload/v1610211325/paprika%20-%20very%20interesting/M02RESTING.svg\"},\n  ],\n  entriesText: [\n    {\n      headlines: \"Dans une économie de l’attention, il faut se démarquer.\",\n      description: null\n    },\n    {\n      headlines: \"Pour rendre nos clients «Very Interesting», on combine data et Dada. <br /><br /> - Hum… Intéressant… <br /> « Very »\",\n      description: null\n    },\n    {\n      headlines: \"TOUT LE MONDE N’EN A QUE POUR LES DONNÉES. <br /> MAIS LES DONNÉES EN ELLES-MÊMES NE SUFFISENT PAS.\",\n      description: null\n    },\n    {\n      headlines: \"« Very Interesting » ajoute un élément de surprise, de joie, d’incongru.\",\n      description: \"On intercepte la clientèle et on la garde fortement intéressée par ce que font nos clients.\"\n    },\n    {\n      headlines: \"NOS « Very Interesting » SERVICES\",\n      description: \"On fait en sorte que les bonnes personnes fassent ce que nos clients souhaitent\"\n    },\n    {\n      headlines: \"<ul><li>Ciblage</li></li>Analyse de performance</li><li>Refonte de l’expérience de marque (design, rédaction)</li><li>Création de contenu</li><li>Gardiennage d’animaux de compagnie.</li></ul>\",\n      description: null\n    },\n    {\n      headlines: \"Rencontrez des gens <br /> « Very Interesting »\",\n      description: \"Harry et Pierre possèdent tous deux une longue feuille de route en agence et/ou du côté client, en stratégie, en marketing de produits et de services, en création.\"\n    },\n    {\n      headlines: \"Harry <br /> Wakefield\",\n      description: \"« Ce que je trouve de « Very Interesting » chez Harry, ce sont deux choses. Il a toujours eu une longueur d’avance dans sa compréhension des médias sociaux. Et il capable de synthétiser des enjeux complexes en une formule simple, avec laquelle tout le monde est d’accord ». <br /> <span>— Pierre</span>\"\n    },\n    {\n      headlines: \"Pierre <br />  Laramée\",\n      description: \"« C’est sa curiosité et son talent avec les mots, qui rendent Pierre « Very Interetsting ». Il tisse des liens entre ce qu’il apprend, ce qu’il découvre, pour résoudre les problèmes auxquels les entreprises font face. Et il utilise les mots avec brio pour attirer l’attention, toucher, surprendre et inciter à passer à l’action » <span>— Harry</span>\"\n    }\n  ],\n  entriesInfoText: [\n    {\n      text: \"« Very Interesting » rend ses clients plus intéressants, plus remarqués, plus sollicités\"\n    },\n    {\n      text: \"Devenir une Cie « Very interesting » ?\"\n    }\n  ]\n};\n","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Desktop.js",["54","55","56","57","58","59","60"],"import React from \"react\";\nimport mockData from \"./mock_data.js\";\nimport \"./App.css\";\n\nclass Desktop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      counter: 0,\n      selectedDivId: 0,\n      scrollDirection: null,\n      updatedHeightOfPage: null,\n      viewportHeight: null,\n      mockData: null,\n      mockDataTextSubArrays: null,\n      dataToDivs: null,\n      originalImageHeight: null,\n      originalImageStretch: null,\n      isTriggeredInfoContent: false,\n    };\n  }\n\n  componentDidMount(){\n\n    document.addEventListener(\"wheel\", this.scrollHandler);\n    window.addEventListener(\"resize\", this.resizeHandler);\n\n\n    let viewportHeight = window.innerHeight;\n    let updatedHeightOfPage = viewportHeight*15;\n    document.body.style.height = `${updatedHeightOfPage}px`;\n\n    this.setState({\n      updatedHeightOfPage,\n      viewportHeight,\n      mockData\n    }, () => {\n\n      let mockDataText = this.state.mockData.entriesText;\n\n      let mockDataTextSubArrays = [\n          mockDataText.slice(0, 3),\n          mockDataText.slice(3, 6),\n          mockDataText.slice(6, 9),\n      ];\n\n      this.setState({\n        mockDataTextSubArrays\n      }, () => {\n        this.renderDataToDivs();\n      })\n    })\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n\n    let counter = this.state.counter;\n    let divTextH1 = [...document.getElementsByClassName('div_text_h1')];\n    let divTextP = [...document.getElementsByClassName('div_text_p')];\n\n\n    let mockDataTextSubArrays = this.state.mockDataTextSubArrays;\n\n\n      if (counter !== prevState.counter) {\n        if(counter >= 0 && counter < 6){\n\n          this.setState({\n            isDisplayFooter: false\n          })\n\n          let mockDataTextSubArraysFirstRow = mockDataTextSubArrays[0];\n\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataTextSubArraysFirstRow[index].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = mockDataTextSubArraysFirstRow[index].description\n          })\n        }\n\n        if(counter >= 6 && counter < 12){\n\n          this.setState({\n            isDisplayFooter: false\n          })\n\n          let mockDataTextSubArraysSecondRow = mockDataTextSubArrays[1];\n\n            divTextH1.map((ele, index) => {\n              ele.innerHTML = mockDataTextSubArraysSecondRow[index].headlines\n            })\n            divTextP.map((ele, index) => {\n              ele.innerHTML = mockDataTextSubArraysSecondRow[index].description\n            })\n        }\n\n        if(counter === 12){\n\n          window.onscroll = (ev) =>  {\n\n            console.log(ev, \"here\");\n\n              // Make it appear a bit before;\n              if ((window.innerHeight + window.scrollY)\n              >= document.body.offsetHeight - 800) {\n                this.setState({\n                  isDisplayFooter: true\n                })\n              }else{\n                this.setState({\n                  isDisplayFooter: false\n                })\n              }\n          };\n\n\n          let mockDataTextSubArraysThirdRow = mockDataTextSubArrays[2];\n\n          divTextH1.map((ele, index) => {\n            ele.innerHTML = mockDataTextSubArraysThirdRow[index].headlines\n          })\n          divTextP.map((ele, index) => {\n            ele.innerHTML = mockDataTextSubArraysThirdRow[index].description\n          })\n        }\n      }\n    }\n\n\n  handleImageLoaded = (divID) => {\n    this.setState({\n      loaded: true\n    }, () => {\n\n      let viewportHeight = this.state.viewportHeight;\n      let imgContainer = document.querySelector(`#${divID}`);\n      let img = document.querySelector(`#${divID} img`);\n\n      let aligningThirdDiv = this.defineValueFromPorcentage(2, viewportHeight);\n\n      let originalImageHeight = img.getBoundingClientRect().height;\n\n      let originalImageStretch = (viewportHeight + 1.4*aligningThirdDiv)/originalImageHeight;\n\n\n      imgContainer.style.height = viewportHeight + \"px\";\n      img.style.transform = `scaleY(${originalImageStretch})`;\n\n      this.setState({\n        originalImageHeight,\n        originalImageStretch\n      })\n    })\n  }\n\n\n  renderDataToDivs = () => {\n\n    let mockData = this.state.mockData;\n    let mockDataTextSubArraysFirstRow = this.state.mockDataTextSubArrays[0];\n\n\n    let dataToDivs = mockData.entriesImgDesktop.map((ele, index) => {\n\n      let divID = `container_div_${index}`;\n\n\n      return (\n        <div className=\"main_vertical_container_inner\">\n          <div id={divID}>\n              <img\n                onLoad={() => {this.handleImageLoaded(divID)}}\n                src={ele.img}\n                alt={ele.img}\n              />\n            </div>\n            <div className=\"text_container\">\n              <h1 className=\"div_text_h1\">\n                  {mockDataTextSubArraysFirstRow[index].headlines}\n              </h1>\n              <p className=\"div_text_p\">\n                {mockDataTextSubArraysFirstRow[index].description}\n              </p>\n            </div>\n        </div>\n      )\n    })\n    this.setState({\n      dataToDivs\n    })\n  }\n\n  resizeHandler = () => {\n\n    let viewportHeight = window.innerHeight;\n    this.setState({\n      viewportHeight\n    });\n  }\n\n\n  // scrollHandler here;\n  scrollHandler = (event) => {\n\n    if(!this.state.originalImageStretch){\n      return null;\n    }\n\n    let deltaY = event.deltaY;\n    if (deltaY < 0){\n      this.setState({\n        scrollDirection: \"up\"\n      })\n    }else{\n      this.setState({\n        scrollDirection: \"down\"\n      })\n    }\n\n    let numberOfPixelScrolled = window.scrollY;\n    let viewportHeight = this.state.viewportHeight;\n\n\n    if (numberOfPixelScrolled > 0\n      && numberOfPixelScrolled < viewportHeight) {\n\n        this.handleResetPreviousDivHeightUp(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 0,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight\n      && numberOfPixelScrolled < viewportHeight*2) {\n\n        this.handleResetPreviousDivHeightUp(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 1,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*2\n      && numberOfPixelScrolled < viewportHeight*3) {\n\n       this.handleResetPreviousDivHeightDown(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 2,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n\n\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*3\n      && numberOfPixelScrolled < viewportHeight*4) {\n\n\n        this.handleResetPreviousDivHeightUp(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 3,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*4\n      && numberOfPixelScrolled < viewportHeight*5) {\n\n        this.handleResetPreviousDivHeightDown(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 4,\n          selectedDivId: 2,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*5\n      && numberOfPixelScrolled < viewportHeight*6) {\n\n        this.handleResetPreviousDivHeightUp(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 5,\n          selectedDivId: 2,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*6\n      && numberOfPixelScrolled < viewportHeight*7) {\n\n        this.handleResetPreviousDivHeightDown(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 6,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*7\n      && numberOfPixelScrolled < viewportHeight*8) {\n\n        this.handleResetPreviousDivHeightUp(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 7,\n          selectedDivId: 0,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*8\n      && numberOfPixelScrolled < viewportHeight*9) {\n\n        this.handleResetPreviousDivHeightDown(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 8,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n\n\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*9\n      && numberOfPixelScrolled < viewportHeight*10) {\n\n        this.handleResetPreviousDivHeightUp(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 9,\n          selectedDivId: 1,\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*10\n      && numberOfPixelScrolled < viewportHeight*11) {\n\n        this.handleResetPreviousDivHeightDown(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 10,\n          selectedDivId: 2\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"up\");\n        })\n    }\n\n    if (numberOfPixelScrolled > viewportHeight*11\n      && numberOfPixelScrolled < viewportHeight*12) {\n\n        this.handleResetPreviousDivHeightUp(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 11,\n          selectedDivId: 2\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, selectedDivId, \"down\");\n        })\n    }\n\n\n    if (numberOfPixelScrolled > viewportHeight*12\n      && numberOfPixelScrolled < viewportHeight*13) {\n\n        this.handleResetPreviousDivHeightDown(this.state.selectedDivId);\n\n\n        this.setState({\n          counter: 12,\n          selectedDivId: 2\n        }, () => {\n          let counter = this.state.counter;\n          let selectedDivId = this.state.selectedDivId;\n          this.handleAnimation(counter, 0, \"up\", true);\n          this.handleAnimation(counter, 1, \"up\", true);\n          this.handleAnimation(counter, 2, \"up\", true);\n        })\n    }\n\n\n  };\n\n\n\n\n\n\n  handleAnimation = (counter, selectedDivId, animDirection, all) => {\n\n    console.log(all);\n\n    // to optimze;\n    // this.handleDivTextChange(counter)\n\n    let divID = `container_div_${selectedDivId}`;\n    let imgContainer = document.querySelector(`#${divID}`);\n    let img = document.querySelector(`#${divID} img`);\n    let numberOfPixelScrolled = window.scrollY;\n    let viewportHeight = this.state.viewportHeight;\n    let originalImageStretch = this.state.originalImageStretch;\n\n\n    if(!all){\n\n          let scrolledPorcentage = this.definePorcentage(\n            (numberOfPixelScrolled - this.state.counter * viewportHeight),\n            viewportHeight)\n          ;\n          let remainingScrollPorcentage = 100-scrolledPorcentage;\n          let translateYPorcentageUp = this.defineValueFromPorcentage(\n              remainingScrollPorcentage,\n              originalImageStretch\n          );\n          let translateYPorcentageDown = this.defineValueFromPorcentage(\n              scrolledPorcentage,\n              originalImageStretch\n          );\n\n          if(animDirection === \"up\"){\n\n            img.style.transform = `scaleY(${translateYPorcentageUp})`;\n            let newImgContainerHeight = img.getBoundingClientRect().height;\n            imgContainer.style.height = newImgContainerHeight + \"px\";\n\n              if(translateYPorcentageUp < 1){\n                if(selectedDivId === 0){\n                  img.style.transform = `scaleY(1.035)`;\n                }\n                if(selectedDivId === 1){\n                  img.style.transform = `scaleY(1)`;\n                }\n                if(selectedDivId === 2){\n                  img.style.transform = `scaleY(1.04)`;\n                }\n\n              let newImgContainerHeight = img.getBoundingClientRect().height;\n              imgContainer.style.height = newImgContainerHeight + \"px\";\n            }\n          }\n\n          if(animDirection === \"down\"){\n            img.style.transform = `scaleY(${translateYPorcentageDown})`;\n            let newImgContainerHeight = img.getBoundingClientRect().height;\n            imgContainer.style.height = newImgContainerHeight + \"px\";\n\n            if(translateYPorcentageDown < 1){\n              if(selectedDivId === 0){\n                img.style.transform = `scaleY(1.035)`;\n              }\n              if(selectedDivId === 1){\n                img.style.transform = `scaleY(1)`;\n              }\n              if(selectedDivId === 2){\n                img.style.transform = `scaleY(1.04)`;\n              }\n              let newImgContainerHeight = img.getBoundingClientRect().height;\n              imgContainer.style.height = newImgContainerHeight + \"px\";\n            }\n          }\n\n      }else{\n\n\n        let scrolledPorcentage = this.definePorcentage(\n          (numberOfPixelScrolled - this.state.counter * viewportHeight),\n          viewportHeight)\n        ;\n        let remainingScrollPorcentage = 100-scrolledPorcentage;\n        let translateYPorcentageUp = this.defineValueFromPorcentage(\n            remainingScrollPorcentage,\n            originalImageStretch\n        );\n        let translateYPorcentageDown = this.defineValueFromPorcentage(\n            scrolledPorcentage,\n            originalImageStretch\n        );\n\n        if(animDirection === \"up\"){\n\n          console.log(translateYPorcentageUp, selectedDivId, \"heres\");\n\n\n          img.style.transform = `scaleY(${translateYPorcentageUp})`;\n          let newImgContainerHeight = img.getBoundingClientRect().height;\n          imgContainer.style.height = newImgContainerHeight + \"px\";\n\n          if(selectedDivId === 1){\n\n            // 570 = hauteur premier div;\n            // 593 = hauteur deuxième div;\n            let coeffScalDivId1 = (translateYPorcentageUp * 570/593)\n            // console.log(x, \"here\");\n            img.style.transform = `scaleY(${coeffScalDivId1})`;\n            let newImgContainerHeight = img.getBoundingClientRect().height;\n            imgContainer.style.height = newImgContainerHeight + \"px\";\n\n          }\n\n            if(translateYPorcentageUp < 1){\n              if(selectedDivId === 0){\n                img.style.transform = `scaleY(1)`;\n              }\n              if(selectedDivId === 1){\n                img.style.transform = `scaleY(0.95)`;\n              }\n              if(selectedDivId === 2){\n                img.style.transform = `scaleY(1)`;\n              }\n\n            let newImgContainerHeight = img.getBoundingClientRect().height;\n            imgContainer.style.height = newImgContainerHeight + \"px\";\n          }\n        }\n\n        if(animDirection === \"down\"){\n\n          // APPLY THE CHANGE HERE;\n\n          img.style.transform = `scaleY(${translateYPorcentageDown})`;\n          let newImgContainerHeight = img.getBoundingClientRect().height;\n          imgContainer.style.height = newImgContainerHeight + \"px\";\n\n\n          if(selectedDivId === 1){\n\n            console.log(translateYPorcentageDown);\n\n            img.style.transform = `scaleY(${translateYPorcentageDown})`;\n            let newImgContainerHeight = img.getBoundingClientRect().height;\n            imgContainer.style.height = newImgContainerHeight + \"px\";\n\n          }\n\n          if(translateYPorcentageDown < 1){\n            if(selectedDivId === 0){\n              img.style.transform = `scaleY(1)`;\n            }\n            if(selectedDivId === 1){\n              img.style.transform = `scaleY(1)`;\n            }\n            if(selectedDivId === 2){\n              img.style.transform = `scaleY(1)`;\n            }\n            let newImgContainerHeight = img.getBoundingClientRect().height;\n            imgContainer.style.height = newImgContainerHeight + \"px\";\n          }\n        }\n\n    }\n  }\n\n\n  handleResetPreviousDivHeightDown = (id) => {\n\n    let scrollDirection = this.state.scrollDirection;\n\n    if(scrollDirection === \"down\"){\n\n      let previousDivId = id;\n      let divID = `container_div_${previousDivId}`;\n\n      let imgContainer = document.querySelector(`#${divID}`);\n      let img = document.querySelector(`#${divID} img`);\n      let originalImageStretch = this.state.originalImageStretch;\n\n      img.style.transform = `scaleY(${originalImageStretch})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n\n    }else{\n      return null;\n    }\n  };\n\n\n  handleResetPreviousDivHeightUp = (id) => {\n\n    let scrollDirection = this.state.scrollDirection;\n\n    if(scrollDirection === \"down\"){\n      return null;\n    }else{\n\n\n      let previousDivId = id;\n      let divID = `container_div_${previousDivId}`;\n\n      let imgContainer = document.querySelector(`#${divID}`);\n      let img = document.querySelector(`#${divID} img`);\n      let originalImageStretch = this.state.originalImageStretch;\n\n      img.style.transform = `scaleY(${originalImageStretch})`;\n      let newImgContainerHeight = img.getBoundingClientRect().height;\n      imgContainer.style.height = newImgContainerHeight + \"px\";\n    }\n\n  }\n\n\n  definePorcentage = (percent, total) => {\n      let porcentage = (percent/total)*100;\n      return porcentage\n   }\n\n\n   defineValueFromPorcentage = (percentage, total) => {\n     let value =  ((percentage * total)/100);\n     return value;\n   }\n\n   renderDivsToDom = () => {\n     if(!this.state.dataToDivs){\n       return \"loading\"\n     }else{\n       return this.state.dataToDivs;\n     }\n   };\n\n\n\n   renderInfo = () => {\n     return (\n       <div className=\"info_main_container\">\n          {this.renderInfoCTA()}\n          {this.renderBodyCTA()}\n       </div>\n     )\n   }\n\n\n   renderInfoCTA = () => {\n     return (\n       <div className=\"cta_desktop_container\">\n       <div\n          className=\"info_cta_container\"\n          onClick={this.triggerInfoContent}\n          style={this.infoCTAStyle()}>\n          <span>\n            +\n          </span>\n       </div>\n       <div className=\"en_cta\">\n          <span>\n            EN\n          </span>\n       </div>\n       </div>\n     )\n   };\n\n\n   triggerInfoContent = () => {\n     this.setState({\n       isTriggeredInfoContent: !this.state.isTriggeredInfoContent\n     })\n   }\n\n   infoCTAStyle = () => {\n     if(!this.state.isTriggeredInfoContent){\n       return {\n         transform: \"rotate(0deg)\",\n         transition: \"0.1s\"\n       }\n     }else{\n       return {\n         transform: \"rotate(45deg)\",\n         transition: \"0.1s\"\n       }\n     }\n   }\n\n   renderBodyCTA = () => {\n     if(!this.state.isTriggeredInfoContent){\n       return null;\n     }\n     return (\n       <div className=\"info_body_container\">\n          <div className=\"info_body_container_headline\">\n            <h1>« Very Interesting » rend ses clients plus intéressants, plus remarqués, plus sollicités</h1>\n          </div>\n          <div className=\"info_body_container_ctas\">\n            <h1>Devenir une Cie <br /> « Very interesting » ?</h1>\n            <div className=\"info_body_container_ctas_spans\">\n                <span>\n                  APPELEZ\n                </span>\n                <span>\n                  ÉCRIVEZ\n                </span>\n                <span>\n                  REGARDEZ\n                </span>\n            </div>\n          </div>\n       </div>\n     )\n   };\n\n\n   renderFooter = () => {\n     if(!this.state.isDisplayFooter){\n       return null;\n     }\n     return (\n       <footer className=\"footer_desktop\">\n          <div className=\"footer_desktop_first\">\n            <h1>Intéressé(e)?</h1>\n          </div>\n          <div className=\"footer_cta\">\n              <span>\n                APPELEZ\n              </span>\n              <span>\n                ÉCRIVEZ\n              </span>\n              <span>\n                REGARDEZ\n              </span>\n          </div>\n          <span className=\"copyright\">\n              « Very Interesting » ©2021\n          </span>\n       </footer>\n     )\n   }\n\n\n\n  render() {\n    return (\n      <div className=\"main_vertical_container\">\n        {this.renderInfo()}\n        {this.renderDivsToDom()}\n        {this.renderFooter()}\n      </div>\n    );\n  }\n}\n\nexport default Desktop;\n","/Users/cyrus/Documents/Paprika - Very interesting/my-app/src/Mobile.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],{"ruleId":"85","severity":1,"message":"86","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":17},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"85","severity":1,"message":"96","line":28,"column":9,"nodeType":"87","messageId":"88","endLine":28,"endColumn":14},{"ruleId":"85","severity":1,"message":"97","line":31,"column":9,"nodeType":"87","messageId":"88","endLine":31,"endColumn":21},{"ruleId":"85","severity":1,"message":"96","line":60,"column":9,"nodeType":"87","messageId":"88","endLine":60,"endColumn":14},{"ruleId":"85","severity":1,"message":"98","line":85,"column":9,"nodeType":"87","messageId":"88","endLine":85,"endColumn":38},{"ruleId":"90","replacedBy":"99"},{"ruleId":"92","replacedBy":"100"},{"ruleId":"85","severity":1,"message":"101","line":1,"column":7,"nodeType":"87","messageId":"88","endLine":1,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":76,"column":38,"nodeType":"104","messageId":"105","endLine":76,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":79,"column":37,"nodeType":"104","messageId":"105","endLine":79,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":92,"column":40,"nodeType":"104","messageId":"105","endLine":92,"endColumn":42},{"ruleId":"102","severity":1,"message":"103","line":95,"column":39,"nodeType":"104","messageId":"105","endLine":95,"endColumn":41},{"ruleId":"102","severity":1,"message":"103","line":122,"column":38,"nodeType":"104","messageId":"105","endLine":122,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":125,"column":37,"nodeType":"104","messageId":"105","endLine":125,"endColumn":39},{"ruleId":"85","severity":1,"message":"106","line":443,"column":15,"nodeType":"87","messageId":"88","endLine":443,"endColumn":28},{"ruleId":"85","severity":1,"message":"107","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":35,"column":7,"nodeType":"110","messageId":"111","endLine":35,"endColumn":20},{"ruleId":"85","severity":1,"message":"112","line":88,"column":9,"nodeType":"87","messageId":"88","endLine":88,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":100,"column":43,"nodeType":"104","messageId":"105","endLine":100,"endColumn":45},{"ruleId":"102","severity":1,"message":"103","line":103,"column":34,"nodeType":"104","messageId":"105","endLine":103,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":117,"column":36,"nodeType":"104","messageId":"105","endLine":117,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":120,"column":36,"nodeType":"104","messageId":"105","endLine":120,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":168,"column":36,"nodeType":"104","messageId":"105","endLine":168,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":171,"column":36,"nodeType":"104","messageId":"105","endLine":171,"endColumn":38},{"ruleId":"85","severity":1,"message":"113","line":199,"column":15,"nodeType":"87","messageId":"88","endLine":199,"endColumn":27},{"ruleId":"85","severity":1,"message":"113","line":213,"column":15,"nodeType":"87","messageId":"88","endLine":213,"endColumn":27},{"ruleId":"85","severity":1,"message":"114","line":229,"column":15,"nodeType":"87","messageId":"88","endLine":229,"endColumn":23},{"ruleId":"85","severity":1,"message":"113","line":230,"column":15,"nodeType":"87","messageId":"88","endLine":230,"endColumn":27},{"ruleId":"85","severity":1,"message":"114","line":243,"column":15,"nodeType":"87","messageId":"88","endLine":243,"endColumn":23},{"ruleId":"85","severity":1,"message":"113","line":244,"column":15,"nodeType":"87","messageId":"88","endLine":244,"endColumn":27},{"ruleId":"85","severity":1,"message":"115","line":267,"column":13,"nodeType":"87","messageId":"88","endLine":267,"endColumn":20},{"ruleId":"85","severity":1,"message":"116","line":268,"column":13,"nodeType":"87","messageId":"88","endLine":268,"endColumn":18},{"ruleId":"85","severity":1,"message":"113","line":349,"column":11,"nodeType":"87","messageId":"88","endLine":349,"endColumn":23},{"ruleId":"85","severity":1,"message":"106","line":522,"column":15,"nodeType":"87","messageId":"88","endLine":522,"endColumn":28},{"ruleId":"85","severity":1,"message":"117","line":546,"column":15,"nodeType":"87","messageId":"88","endLine":546,"endColumn":22},{"ruleId":"85","severity":1,"message":"106","line":547,"column":15,"nodeType":"87","messageId":"88","endLine":547,"endColumn":28},{"ruleId":"85","severity":1,"message":"113","line":564,"column":9,"nodeType":"87","messageId":"88","endLine":564,"endColumn":21},{"ruleId":"85","severity":1,"message":"118","line":607,"column":13,"nodeType":"87","messageId":"88","endLine":607,"endColumn":37},{"ruleId":"85","severity":1,"message":"119","line":696,"column":10,"nodeType":"87","messageId":"88","endLine":696,"endColumn":27},"no-unused-vars","'SvgSection' is defined but never used.","Identifier","unusedVar","'mock_data' is defined but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],["120"],["121"],"'props' is assigned a value but never used.","'scrollHeight' is assigned a value but never used.","'translateYPercentDescNumbered' is assigned a value but never used.",["120"],["121"],"'mock_data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'selectedDivId' is assigned a value but never used.","'ScrollDirection' is defined but never used.","no-dupe-keys","Duplicate key 'resetTextDivs'.","ObjectExpression","unexpected","'resetTextDivs' is assigned a value but never used.","'imgContainer' is assigned a value but never used.","'imgScale' is assigned a value but never used.","'divIDH1' is assigned a value but never used.","'divIP' is assigned a value but never used.","'counter' is assigned a value but never used.","'originalImageHeightArray' is assigned a value but never used.","'verticalDivHeight' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]